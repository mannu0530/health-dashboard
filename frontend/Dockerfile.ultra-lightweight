# syntax=docker/dockerfile:1.4
# Ultra-lightweight build for 2GB servers - NO MEMORY ISSUES
FROM node:18-alpine AS deps

# Set work directory
WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./

# Install only production dependencies with minimal memory usage
RUN npm ci --only=production --silent --no-audit --no-fund --prefer-offline \
    && npm cache clean --force

# Build stage with extreme memory optimization
FROM node:18-alpine AS build

# Set work directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies with memory optimization
RUN npm ci --silent --no-audit --no-fund --prefer-offline

# Copy only essential source files (exclude everything else)
COPY src/ ./src/
COPY public/ ./public/
COPY package*.json ./
COPY tsconfig.json ./
COPY .dockerignore.ultra .dockerignore

# Set environment variables for ultra-minimal builds
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV CI=true
ENV DISABLE_ESLINT_PLUGIN=true
ENV SKIP_PREFLIGHT_CHECK=true
ENV NODE_OPTIONS="--max-old-space-size=256 --optimize-for-size --gc-interval=100"
ENV NPM_CONFIG_CACHE=/tmp/.npm
ENV NPM_CONFIG_TMP=/tmp/.npm

# Create temporary directories
RUN mkdir -p /tmp/.npm

# Build with extreme memory constraints and garbage collection
RUN node --max-old-space-size=256 --optimize-for-size --gc-interval=100 \
    ./node_modules/.bin/react-scripts build

# Production stage - ultra minimal
FROM nginx:alpine AS production

# Install only essential packages
RUN apk add --no-cache curl

# Copy built application
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Change ownership
RUN chown -R nextjs:nodejs /usr/share/nginx/html

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 80

# Lightweight health check
HEALTHCHECK --interval=60s --timeout=5s --start-period=10s --retries=2 \
    CMD curl -f http://localhost:80/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
